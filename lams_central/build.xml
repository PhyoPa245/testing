<?xml version="1.0" encoding="UTF-8"?>

<project name="LAMS Central" basedir="." default="print-usage">
	
	<import file="../lams_build/build_base.xml"/> 

    <fileset id="js.to.minify" dir="${basedir}/web/includes/javascript">
        	<include name="addLesson.js"/>
        	<include name="chart.js"/>
  	  	<include name="common.js"/>
		<include name="comments.js"/>
  	  	<include name="dialog.js"/>
  	  	<include name="download.js"/>
        	<include name="main.js"/>
        	<include name="openUrls.js"/>
        	<include name="orgGroup.js"/>
        	<include name="orgGrouping.js"/>
        	<include name="progressBar.js"/>
 	   	<include name="portrait.js"/>
   	 	<include name="rating.js"/>
   	 	<include name="upload.js"/>
  	  	<include name="authoring/*.js"/>
    </fileset>
	
	<target name="_copy-war-resources">
		<!-- authoring directory needed for the minify -->
		<mkdir dir="${basedir}/build/war/includes/javascript/authoring" />
		<!-- Internal target: Adds additional web content to WAR -->
		<echo>${ant.project.name}: Copying favicon</echo>
		<copy todir="${basedir}/build/war">
			<fileset dir="${conf.dir}/favicon/lams">
				<include name="**/*.ico"/>
			</fileset>
		</copy>
	</target>
	
	<target name="_copy-jsp" depends="sass.compile, _js-minify">
			<!-- Internal target: Copies JSP files. -->
			<echo>${ant.project.name}: Copying JSP files</echo>

			<!-- No processing is needed for most of the files so copy files straight to assembly dir to create WAR -->
			<echo>Copying web resources</echo>
		 	<copy todir="${basedir}/build/war">
				<fileset dir="${conf.web.dir}">
					<exclude name="**/*.scss"/>
					<exclude name="authoring/template/tbl/tbl.jsp"/>
				</fileset>
		 	</copy>
		
			<!-- Now handle the tweaks to the authoring template files -->
			<echo>Configuring template files to generate desired activities</echo>
		 	<copy todir="${basedir}/build/war/authoring/template/tbl/" overwrite="true" verbose="true">
				<fileset dir="${conf.web.dir}/authoring/template/tbl/">
					<include name="tbl.jsp" />
				</fileset>
				<filterset>
					<filter token="template_tbl_show_introduction" value="${template.tbl.show.introduction}" />
					<filter token="template_tbl_show_preview" value="${template.tbl.show.preview}" />
					<filter token="template_tbl_show_notebook" value="${template.tbl.show.notebook}" />
				</filterset>
		 	</copy>
	</target>
	
	<target name="_build-war" depends="_build-manifest, _copy-war-resources, _copy-jsp">
		<!-- Internal target: Builds WAR without archivisation -->
		<echo>${ant.project.name}: Building exploded WAR</echo>
		<copy todir="${basedir}/build/lib/${product}.war">
			<fileset dir="${basedir}/build/war" />
		</copy>
		<copy todir="${basedir}/build/lib/${product}.war/META-INF" verbose="true">
			<fileset dir="${basedir}/build">
				<include name="MANIFEST.MF"/>
			</fileset>
		</copy>
	</target>
	
	<target name="deploy-war" depends="_build-war, explode-war-delete" description="Deploys WAR.">
		<echo>Removing cached files</echo>
		<delete quiet="true">
			<fileset dir="${server.home}/standalone/deployments/lams.ear/tmp"/>
			<fileset dir="${server.home}/standalone/deployments/lams.ear/work"/>
		</delete>
				
		<echo>${ant.project.name}: Deploying exploded WAR</echo>
		<copy todir="${server.home}/standalone/deployments/lams.ear/${product}.war">
			<fileset dir="${basedir}/build/lib/${product}.war" />
		</copy>
		
		<echo>${ant.project.name}: Copying language files</echo>
		<copy todir="${server.home}/standalone/deployments/lams.ear/lams-dictionary.jar" overwrite="true">
		   <fileset dir="${basedir}/build/lib/language" />
		</copy>
	</target>
	

	<!-- Not needed. Does not even display warning to avoid confusion -->
	<target name="_copy-hbm" />
	
	
	<target name="explode-war" depends="_target-not-available" description="Explodes deployed WAR to folder." />

	<target name="compile-material-kit-styles" description="Creates customised material-kit css files from scss (sass) files"  depends="_sass.build.clean.material.kit">
			<echo>Compiling customised Material Kit style files files from ${scss.common.variables} using ${sass_exec_file}</echo>
			<mkdir dir="${basedir}/build/css" />
			<touch verbose="true">
		        <fileset dir="${scss.common.variables}" erroronmissingdir="false">
			        <include name="material-kit*.scss"/>
	 	        </fileset>
	   	 	</touch>
	  	  	<ant target="_sass.do.compile.material.kit"/>
	</target>
		
		<target name="_sass.do.compile.material.kit">
	        <apply dest="${basedir}/build/css" executable="${sass_exec_file}" failonerror="true" verbose="true">
	        	<arg value="--sourcemap=none"/>
	        	<arg value="--load-path=${scss.common.variables}"/>
	            <srcfile/>
	            <targetfile/>
		        <fileset dir="${scss.common.variables}/" erroronmissingdir="false">
			        <include name="material-kit*.scss"/>
	 	        </fileset>
	            <mapper from="*.scss" to="*.css" type="glob"/>
	        </apply>
		    <ant target="_css.minify.copy.material.kit"/>
		    <ant target="_css.nominify.copy.material.kit"/>
		</target>
		
		<target name="_css.minify.copy.material.kit"  if="${css.minify}">
			<echo> Minifying Files </echo>
		    <apply executable="java" parallel="false">
		        <fileset dir="${basedir}/build/css">
		        	<include name="material-kit*.css"/>
			    </fileset>
		        <arg line="-jar"/>
		        <arg path="${yuicompressor}"/>
		         <srcfile/>
		        <arg line="-o"/>
		        <mapper type="glob" from="*.css" to="${basedir}/build/css/*-min.css"/>
		        <targetfile/>
		    </apply>
    		<echo>Copying css and map files from build area to web/css directory. </echo>
		 	<copy todir="${scss.css.dir}">
				<fileset dir="${basedir}/build/css" erroronmissingdir="false">
					<include name="material-kit*.css"/>
					<include name="material-kit*.map"/>
				</fileset>
			    <mapper type="glob" from="*-min.css" to="*.css"/>
			    <mapper type="glob" from="*.map" to="*.map"/>
		 	</copy>
		</target>

		<target name="_css.nominify.copy.material.kit" unless="${css.minify}">
	    		<echo>Copying css files from build area to web/css directory. The .map files are not copied. </echo>
		 	<copy todir="${scss.css.dir}" verbose="true">
				<fileset dir="${basedir}/build/css" erroronmissingdir="false">
					<include name="material-kit*.css"/>
			        	<exclude name="*-min.css"/>
				</fileset>
			    <mapper type="glob" from="*.css" to="*.css"/>
		 	</copy>
		</target>

		<target name="_sass.build.clean.material.kit">
			<delete quiet="true">
    			<fileset dir="${basedir}/build/css" includes="material-kit*.*"/>
			</delete>
		</target>

</project>